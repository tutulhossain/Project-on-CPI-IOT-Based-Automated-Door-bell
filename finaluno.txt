#include <Keypad.h>
#include <Wire.h> 
#include <LiquidCrystal_I2C.h>
#include <Servo.h>
int led = 11;
int sensor = 13;
int sensor1 = 12;
int buzzerPin = 2; 
int tim = 250;
Servo myservo;
char customKey;
LiquidCrystal_I2C lcd(0x27,16,2);
#define Password_Lenght 7 // Give enough room for six chars + NULL char

int pos = 0;    // variable to store the servo position

char Data[Password_Lenght]; // 6 is the number of chars it can hold + the null char = 7
char Master[Password_Lenght] = "123456";
byte data_count = 0, master_count = 0;
bool Pass_is_good;
const byte ROWS = 4; //four rows
const byte COLS = 4; //four columns
char keys[ROWS][COLS] = {
 {'1','2','3','A'},
 {'4','5','6','B'},
 {'7','8','9','C'},
 {'*','0','#','D'}
};
bool door = true;
byte rowPins[ROWS] = {10, 9, 8, 7}; //connect to the row pinouts of the keypad
byte colPins[COLS] = {6, 5, 4, 3}; //connect to the column pinouts of the keypad

Keypad customKeypad( makeKeymap(keys), rowPins, colPins, ROWS, COLS); //initialize an instance of class NewKeypad

void setup()
{
   myservo.attach(1);
  ServoClose();
   //Serial.begin(115200);
   pinMode(led, OUTPUT);
   pinMode(buzzerPin, OUTPUT); 
   pinMode(sensor, INPUT);
   pinMode(sensor1, INPUT);
    lcd.init(); //initialize the lcd
   lcd.backlight(); //open the backlight
   //lcd.begin(16, 2);
  lcd.print(" Arduino Door");
  lcd.setCursor(0, 1);
  lcd.print("--Bell project--");
  delay(1000);
  lcd.clear();

}

void loop()
{
  
  
      if (door == 0)
  {
      ser();
      ser1();
    customKey = customKeypad.getKey();

    if (customKey == '#')

    {
      lcd.clear();
     ServoClose();
      lcd.print("  Door is close");
      delay(45);
      door = 1;
    }
  }

  else 
  {
    Open();
    ser();
    ser1();
  }
  
 
}
void ser()
{
      int sensorval = digitalRead(sensor);
  

     if (sensorval == HIGH) {

   analogWrite(buzzerPin, 240);
   
    }
   else {
    analogWrite(buzzerPin, 0);
    
     }
  

}
void ser1()
{
   int sensorval1 = digitalRead(sensor1);
  if (sensorval1 == HIGH) {
    digitalWrite(led, HIGH);
     
    }
   else{
    digitalWrite(led, LOW);
    
    }
}
void clearData()
{
  while (data_count != 0)
  { // This can be used for any array size,
    Data[data_count--] = 0; //clear array for new data
  }
  return;
}

void ServoOpen()
{
  
    for (pos = 0; pos <= 180; pos += 5) { // goes from 180 degrees to 0 degrees
   myservo.write(pos);       // tell servo to go to position in variable 'pos'
   

    delay(15);                       // waits 15ms for the servo to reach the position
  }
}

void ServoClose()
{
   for (pos = 180; pos >= 0; pos -= 5) { // goes from 0 degrees to 180 degrees
    // in steps of 1 degree
   myservo.write(pos);              // tell servo to go to position in variable 'pos'
       
  
    delay(35);                       // waits 15ms for the servo to reach the position
  }
}

void Open()
{
  lcd.setCursor(0, 0);
  lcd.print(" Enter Password");
  
  customKey = customKeypad.getKey();
  if (customKey) // makes sure a key is actually pressed, equal to (customKey != NO_KEY)
  {
    Data[data_count] = customKey; // store char into data array
    lcd.setCursor(data_count, 1); // move cursor to show each new char
    lcd.print(Data[data_count]); // print char at said cursor
    data_count++; // increment data array by 1 to store new char, also keep track of the number of chars entered
  }

  if (data_count == Password_Lenght - 1) // if the array index is equal to the number of expected chars, compare data to master
  {
    if (!strcmp(Data, Master)) // equal to (strcmp(Data, Master) == 0)
    {
      lcd.clear();
      ServoOpen();
      lcd.print("  Door is Open");
      door = 0;
    }
    else
    {
      lcd.clear();
      lcd.print("  Wrong Password");
      delay(300);
      door = 1;
    }
    clearData();
  }
}